{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Error": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "ironfish-wallet-server",
		"version": "0.0.1",
		"description": "Server that provides Iron Fish light clients access to the network.",
		"license": {
			"name": "MPL-2.0"
		},
		"contact": {
			"name": "Iron Fish ",
			"email": "contact@ironfish.network",
			"url": "https://ironfish.network"
		}
	},
	"paths": {
		"/latest-block": {
			"get": {
				"operationId": "GetLatestBlock",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"hash": {
											"type": "string"
										},
										"sequence": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"hash",
										"sequence"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Retrieves the latest block on the remote node, the block hash and sequence number.",
				"tags": [
					"Block Controller"
				],
				"security": [],
				"parameters": []
			}
		},
		"/transaction": {
			"post": {
				"operationId": "BroadcastTransaction",
				"responses": {
					"200": {
						"description": "if the transaction was accepted, the hash of the transaction",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Broadcasts a transaction to the network. Input is a hex encoded string of the `Transaction` to broadcast.",
				"tags": [
					"Block Controller"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "The hex encoded string `Transaction` to broadcast",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "string",
								"description": "The hex encoded string `Transaction` to broadcast"
							}
						}
					}
				}
			}
		},
		"/block": {
			"get": {
				"operationId": "GetBlock",
				"responses": {
					"200": {
						"description": "The hex encoded string representation of the block",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Retrieves a block from the network. The block can be specified by its hash or sequence number.\nIf neither is provided, a 400 error is returned. If the block is not found, a 404 error is returned.",
				"tags": [
					"Block Controller"
				],
				"security": [],
				"parameters": [
					{
						"description": "The hash of the block to retrieve",
						"in": "query",
						"name": "hash",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "The sequence number of the block to retrieve",
						"in": "query",
						"name": "sequence",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/block-range": {
			"get": {
				"operationId": "GetBlockRange",
				"responses": {
					"200": {
						"description": "An array of hex encoded string representations of the blocks",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"type": "string"
									},
									"type": "array"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Retrieves a range of blocks from the network. The range is specified by a start and end sequence number.\nIf either start or end is invalid, a 400 error is returned. If no blocks are found in the specified range, a 404 error is returned.",
				"tags": [
					"Block Controller"
				],
				"security": [],
				"parameters": [
					{
						"description": "The sequence number of the first block in the range to retrieve",
						"in": "query",
						"name": "start",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "The sequence number of the last block in the range to retrieve",
						"in": "query",
						"name": "end",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/server-info": {
			"get": {
				"operationId": "GetServerInfo",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"blockHash": {
											"type": "string"
										},
										"blockHeight": {
											"type": "number",
											"format": "double"
										},
										"nodeStatus": {
											"type": "string",
											"enum": [
												"started",
												"stopped",
												"error"
											]
										},
										"nodeVersion": {
											"type": "string"
										},
										"networkId": {
											"type": "number",
											"format": "double"
										},
										"vendor": {
											"type": "string"
										},
										"version": {
											"type": "string"
										}
									},
									"required": [
										"blockHash",
										"blockHeight",
										"nodeStatus",
										"nodeVersion",
										"networkId",
										"vendor",
										"version"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Retrieves the server information, including the version, vendor, network ID, node version, node status, block height, and block hash.",
				"tags": [
					"Block Controller"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}